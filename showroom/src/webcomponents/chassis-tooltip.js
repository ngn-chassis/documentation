customElements.define("chassis-tooltip",class extends AuthorElement(HTMLElement){constructor(){super(`<template><style>@charset "UTF-8"; :host{position:fixed;z-index:2147483647;display:block}:host([hidden]){display:none}:host *,:host :after,:host :before{box-sizing:border-box}chassis-tooltip{position:fixed;z-index:2147483647;display:block}chassis-tooltip[hidden]){display:none}chassis-tooltip *,chassis-tooltip :after,chassis-tooltip :before{box-sizing:border-box}</style><slot></slot></template>`),this.on("connected",()=>(this.setAttribute("hidden",""),!this.hasAttribute("for"))?this.UTIL.throwError({message:`Missing required "for" attribute.`}):(this.annotatedElement=document.getElementById(this.getAttribute("for"))||null,this.annotatedElement?void this.UTIL.registerListeners(this.annotatedElement,[{evt:"mouseenter",callback:()=>this.removeAttribute("hidden")},{evt:"mouseleave",callback:()=>this.setAttribute("hidden","")}]):this.UTIL.throwError({type:"reference",message:`Could not find element #${this.getAttribute("for")}. "for" attribute must be set to the id of the element to which to attach the tooltip.`})))}static get observedAttributes(){return["for"]}});