customElements.define("chassis-layout-cell",function(){let a=new WeakMap;return class extends HTMLElement{constructor(){super(),this.keySource="key"in KeyboardEvent.prototype?"key":"keyIdentifier"in KeyboardEvent.prototype?"keyIdentifier":"keyCode",this.attachShadow({mode:"open"});let b=document.createElement("div");b.insertAdjacentHTML("afterbegin",`<template><style>@charset UTF-8; @charset "UTF-8";:host{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}:host *,:host :after,:host :before{box-sizing:border-box}:host([stretch]){flex:1 1 auto}:host([orientation=horizontal]){flex-direction:row}:host([orientation=vertical]){flex-direction:column}chassis-layout-cell{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}:host :after,:host :before,chassis-layout-cell *{box-sizing:border-box}chassis-layout-cell[stretch]{flex:1 1 auto}chassis-layout-cell[orientation=horizontal]{flex-direction:row}chassis-layout-cell[orientation=vertical]{flex-direction:column}</style><slot></slot></template>`);let c=b.querySelector("template");"content"in c?this.shadowRoot.appendChild(c.content.cloneNode(!0)):c.childNodes.forEach(a=>{this.shadowRoot.appendChild(a.cloneNode(!0))}),c=null,this.crypto=null;try{this.crypto=crypto}catch(a){this.crypto=msCrypto}a.set(this,{addPrivateProps:b=>{for(let c in b)a.get(this)[c]=b[c]},addReadOnlyProp:b=>{Object.defineProperty(this,b,a.get(this).readonlyProperty(b))},addReadOnlyProps:b=>{b.forEach(b=>a.get(this).addReadOnlyProp(b))},generateGuid:(a=null)=>{let b="10000000-1000-4000-8000-100000000000".replace(/[018]/g,a=>(a^this.crypto.getRandomValues(new Uint8Array(1))[0]&15>>a/4).toString(16));return a?`${a}_${b}`:b},getBooleanPropertyValue:a=>this.hasAttribute(a)&&"false"!==this.getAttribute(a),handleAttributeChange:(b,c)=>{a.get(this).sourceEl&&(this.setAttribute(b,c),a.get(this).sourceEl[b]=c)},handleBooleanAttributeChange:(b,c)=>{if(a.get(this).sourceEl){return["true","false","",null].includes(c)?"false"===c&&this.hasAttribute(b)?(this.removeAttribute(b),void(a.get(this).sourceEl[b]=!1)):void(a.get(this).sourceEl[b]=this.hasAttribute(b)):(console.error(`<${this.localName}> "${b}" attribute expected boolean but received "${c}"`),this.removeAttribute(b),void(a.get(this).sourceEl[b]=!1))}},handleBooleanPropertyChange:(b,c)=>c?void((!this.hasAttribute(b)||"true"!==this.getAttribute(b))&&(this.setAttribute(b,""),a.get(this).sourceEl[b]=!0)):(this.removeAttribute(b),void(a.get(this).sourceEl[b]=!1)),handlePropertyChange:(b,c)=>{a.get(this).sourceEl[b]=c,this.hasAttribute(b)&&this.getAttribute(b)===c||this.setAttribute(b,c)},readonlyProperty:b=>({get:()=>a.get(this).sourceEl[b],set:()=>a.get(this).throw("readonly",{name:b})}),throw:(a,b)=>{let c="ERROR <chassis-layout-cell> ";"readonly"===a?c+=`Cannot set read-only property "${b.name}".`:c=c.trim();console.error(c)}}),a.set(this,{children:[],styleSheet:null,sizeRule:null,size:null})}static get observedAttributes(){return["size"]}connectedCallback(){setTimeout(()=>{a.get(this).styleSheet=this.shadowRoot.styleSheets[0];let b=a.get(this).styleSheet.cssRules.length;a.get(this).styleSheet.insertRule(":host([size]) {}",b),a.get(this).sizeRule=a.get(this).styleSheet.cssRules[b],this.hasAttribute("size")&&(this.size=this.getAttribute("size"))},0)}attributeChangedCallback(b,c,d){if(b=b.toLowerCase(),d!==c)switch(b){case"size":a.get(this).size!==d&&(this.size=d);break;default:}}get size(){return this.hasAttribute("size")?this.getAttribute("size"):"auto"}set size(b){a.get(this).sizeRule&&(a.get(this).size=b,a.get(this).sizeRule.style.setProperty("flex-basis",b),this.setAttribute("size",b))}}}());