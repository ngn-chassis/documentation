customElements.define("chassis-grid",class extends ChassisElement(HTMLElement){constructor(){super(`<template><style>@charset "UTF-8"; :host{display:grid}:host([inline]){display:inline-grid}chassis-grid{display:grid}chassis-grid[inline]){display:inline-grid}</style><slot></slot></template>`),this.UTIL.defineAttributes({columns:{set:a=>this.PRIVATE.updateColumns(a)},rows:{set:a=>this.PRIVATE.updateRows(a)},gutter:{default:"none",set:()=>this.PRIVATE.updateGutter()}}),this.UTIL.definePrivateProperties({columnsRule:null,rowsRule:null,gutterRule:null,observer:new MutationObserver(a=>{a.forEach(a=>{let{addedNodes:b,removedNodes:c,type:d}=a;return"childList"===d?this.PRIVATE.resetZIndexes():void 0})}),resetZIndexes:()=>{console.log("resetting z-indexes")},updateGutter:(a=this.getAttribute("gutter").trim())=>{this.PRIVATE.gutterRule&&this.PRIVATE.gutterRule.style.setProperty("grid-gap",a)},updateColumns:(a=this.getAttribute("columns").trim())=>{this.children.length&&this.PRIVATE.columnsRule&&this.PRIVATE.columnsRule.style.setProperty("grid-template-columns",this.PRIVATE.getProcessedGridTemplateValue(a))},updateRows:(a=this.getAttribute("rows").trim())=>{this.children.length&&this.PRIVATE.rowsRule&&this.PRIVATE.rowsRule.style.setProperty("grid-template-rows",this.PRIVATE.getProcessedGridTemplateValue(a))},getProcessedGridTemplateValue:a=>{if(!isNaN(a)){let b=parseInt(a),c=[];for(let a=0;a<b;a++)c.push("1fr");a=c.join(" ")}return a}}),this.PRIVATE.observer.observe(this,{attributes:!1,childList:!0,characterData:!1})}static get observedAttributes(){return["columns","rows","gutter"]}connectedCallback(){this.UTIL.definePrivateProperties({styleSheet:this.shadowRoot.styleSheets[0]});let{styleSheet:a}=this.PRIVATE,b=this.PRIVATE.styleSheet.cssRules.length;a.insertRule(":host([gutter]) {}",b),this.PRIVATE.gutterRule=a.cssRules[b],a.insertRule(":host([columns]) {}",b),this.PRIVATE.columnsRule=a.cssRules[b],a.insertRule(":host([rows]) {}",b),this.PRIVATE.rowsRule=a.cssRules[b],setTimeout(()=>{this.hasAttribute("gutter")&&this.PRIVATE.updateGutter(),this.hasAttribute("columns")&&this.PRIVATE.updateColumns(),this.hasAttribute("rows")&&this.PRIVATE.updateRows()},0)}});