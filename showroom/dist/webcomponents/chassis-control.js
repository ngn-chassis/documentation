class ChassisFormControl extends HTMLElement{constructor(){super(),this.attachShadow({mode:'open'});let a=document.createElement('template');a.insertAdjacentHTML('afterbegin',this.templateString),this.shadowRoot.appendChild(a.children[0].content.cloneNode(!0)),a=null,this.fieldInputTypes=['color','date','datetime-local','email','file','hidden','image','month','number','password','range','reset','search','submit','tel','text','time','url','week','textarea'],this.toggleInputTypes=['checkbox','radio'],this.supportedTypes=['field','toggle','select']}get templateString(){return`<template><style>@charset UTF-8; @charset "UTF-8";:host{display:flex;contain:content;max-width:100%}:host *{box-sizing:border-box}:host :before{box-sizing:border-box}:host :after{box-sizing:border-box}:host([type=field]){flex-direction:column}:host([type=toggle]){align-items:center}:host([type=toggle]) .label-wrapper{flex:1 1 auto;display:flex}:host([type=toggle]) .label-wrapper{flex:1 1 auto;display:flex}:host([type=toggle]) .input-wrapper{order:-1;display:flex;justify-content:center;align-items:center}chassis-control{display:flex;contain:content;max-width:100%}chassis-control *{box-sizing:border-box}chassis-control :before{box-sizing:border-box}chassis-control :after{box-sizing:border-box}chassis-control[type=field]{flex-direction:column}chassis-control[type=toggle]{align-items:center}chassis-control[type=toggle] .label-wrapper{flex:1 1 auto;display:flex}chassis-control[type=toggle] .label-wrapper{flex:1 1 auto;display:flex}chassis-control[type=toggle] .input-wrapper{order:-1;display:flex;justify-content:center;align-items:center}</style><slot name="afterbegin"></slot><div class="label-wrapper"><slot name="beforelabel"></slot><slot name="label"></slot><slot name="afterlabel"></slot></div><slot name="between"></slot><div class="input-wrapper"><slot name="beforeinput"></slot><slot name="input"></slot><slot name="afterinput"></slot></div><slot name="beforeend"></slot></template>`}static get observedAttributes(){return['type','id']}get id(){return this.getAttribute('id')}set id(a){this.setAttribute('id',a)}get type(){return this.getAttribute('type')}set type(a){this.setAttribute('type',a)}connectedCallback(){const a=new MutationObserver((a)=>{a.forEach((a)=>{if(a.addedNodes.length){let b=a.addedNodes[0];switch(b.nodeName){case'LABEL':return this.initLabel(b);case'INPUT':case'TEXTAREA':return this.initInput(b);case'SELECT':return this.initSelectMenu(b);default:}}})});a.observe(this,{childList:!0}),setTimeout(()=>{this.removeAttribute('id')},0)}attributeChangedCallback(a,b,c){let d=a.toLowerCase();switch(d){case'type':this.type!==c&&(this.type=c);break;case'id':this.id&&this.id!==c&&this.applyId(c);break;default:}}applyId(a){this.removeAttribute('id'),this.input&&this.input.setAttribute('id',a),this.label&&this.label.setAttribute('for',a)}initLabel(a){this.label=a,a.slot=a.slot||'label',this.id&&(a.htmlFor=this.id)}initInput(a){return this.input=a,a.slot=a.slot||'input',this.id&&(a.id=this.id),this.type?void(this.supportedTypes.includes(this.type)||console.warn(`[WARNING] Chassis Form Controls do not support type "${this.type}." Supported types: ${this.supportedTypes.join(', ')}.`)):void(this.fieldInputTypes.includes(a.type)&&(this.type='field'),this.toggleInputTypes.includes(a.type)&&(this.type='toggle'))}initSelectMenu(a){this.input=a,a.slot=a.slot||'input',this.type='select',this.id&&(a.id=this.id)}}customElements.define('chassis-control',ChassisFormControl);