customElements.define("chassis-layout-cell",class extends AuthorElement(HTMLElement){constructor(){super(`<template><style>@charset "UTF-8"; :host{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}:host *,:host :after,:host :before{box-sizing:border-box}:host([stretch]){flex:1 1 100%}:host([orientation=horizontal]){flex-direction:row}:host([orientation=vertical]){flex-direction:column}chassis-layout-cell{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}chassis-layout-cell *,chassis-layout-cell :after,chassis-layout-cell :before{box-sizing:border-box}chassis-layout-cell[stretch]){flex:1 1 100%}chassis-layout-cell[orientation=horizontal]){flex-direction:row}chassis-layout-cell[orientation=vertical]){flex-direction:column}</style><slot></slot></template>`),this.UTIL.defineAttributes({max:{default:"auto",set:a=>{let b="horizontal"===this.parentNode.getAttribute("orientation")?"max-width":"max-height";this.PRIVATE.maxRule.style.setProperty(b,a)}},min:{default:"auto",set:a=>{let b="horizontal"===this.parentNode.getAttribute("orientation")?"min-width":"min-height";this.PRIVATE.minRule.style.setProperty(b,a)}},size:{default:"auto",set:a=>{this.PRIVATE.sizeRule.style.setProperty("flex-basis",a)}}}),this.on("connected",()=>{this.UTIL.definePrivateProperties({children:[],styleSheet:this.shadowRoot.styleSheets[0],sizeRule:null});let a=this.PRIVATE.styleSheet.cssRules.length;this.PRIVATE.styleSheet.insertRule(":host([size]) {}",a),this.PRIVATE.sizeRule=this.PRIVATE.styleSheet.cssRules[a],this.PRIVATE.styleSheet.insertRule(":host([max]) {}",a),this.PRIVATE.maxRule=this.PRIVATE.styleSheet.cssRules[a],this.PRIVATE.styleSheet.insertRule(":host([min]) {}",a),this.PRIVATE.minRule=this.PRIVATE.styleSheet.cssRules[a],this.hasAttribute("size")&&(this.size=this.getAttribute("size"))})}static get observedAttributes(){return["max","min","size"]}});