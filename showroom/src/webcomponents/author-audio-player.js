customElements.define("author-audio-player",class extends AuthorElement(HTMLElement){constructor(){super(`<template><style>@charset "UTF-8"; :host{display:block}:host *,:host :after,:host :before{box-sizing:border-box}author-audio-player{display:block}author-audio-player *,author-audio-player :after,author-audio-player :before{box-sizing:border-box}</style><slot></slot></template>`),this.UTIL.defineProperties({playlist:{private:!0,default:null},currentSong:{private:!0,default:null}}),this.UTIL.definePrivateMethods({playButtonClickHandler:a=>{a.preventDefault(),this.play()},stopButtonClickHandler:a=>{a.preventDefault(),this.stop()},pauseButtonClickHandler:a=>{a.preventDefault(),this.pause()},initializeButton:a=>{if(a.hasAttribute("function")){let b=a.getAttribute("function");switch(b){case"play":this.playButton=a;break;case"stop":this.stopButton=a;break;case"pause":this.pauseButton=a;break;default:}}}}),this.UTIL.registerListeners(this,{connected:()=>{if("undefined"==typeof Howler||"undefined"==typeof Howl)return this.UTIL.throwError({type:"dependency",vars:{name:"Howler",url:"https://github.com/goldfire/howler.js/"}})},disconnected:()=>{this.playButton&&this.playButton.removeEventListener("click",this.PRIVATE.playButtonClickHandler),this.stopButton&&this.stopButton.removeEventListener("click",this.PRIVATE.stopButtonClickHandler),this.pauseButton&&this.pauseButton.removeEventListener("click",this.PRIVATE.pauseButtonClickHandler)},rendered:()=>{for(let a in this.children){let b=this.children[a];switch(b.localName){case"button":this.PRIVATE.initializeButton(b);break;default:continue;}}}})}get currentSong(){return this.PRIVATE.currentSong}set currentSong(a){let b=this.PRIVATE.playlist.find(b=>b.id===a);return b?void(this.PRIVATE.currentSong=b):this.throwError({message:`Song "${id}" not found in playlist`})}get playButton(){return this.PRIVATE.playButton}set playButton(a){this.PRIVATE.playButton=a,a.addEventListener("click",this.PRIVATE.playButtonClickHandler)}get stopButton(){return this.PRIVATE.stopButton}set stopButton(a){this.PRIVATE.stopButton=a,a.addEventListener("click",this.PRIVATE.stopButtonClickHandler)}get pauseButton(){return this.PRIVATE.pauseButton}set pauseButton(a){this.PRIVATE.pauseButton=a,a.addEventListener("click",this.PRIVATE.pauseButtonClickHandler)}get playlist(){return this.PRIVATE.playlist.map(a=>({title:a.title,artist:a.artist,path:a.path}))}set playlist(a){return Array.isArray(a)?void(this.PRIVATE.playlist=a.map(a=>{if(!a.hasOwnProperty("path"))return this.UTIL.throwError({message:"Song must include a \"path\" property!"}),!1;a.hasOwnProperty("id")||(a.id=this.UTIL.generateGuid("song_"));let b=new Howl({src:a.path});return b.on("play",()=>{console.log("song started")}),b.on("stop",()=>{console.log("song stopped")}),b.on("pause",()=>{console.log("song paused")}),{id:a.id,title:a.title||null,artist:a.artist||null,path:a.path,audio:b}}),this.PRIVATE.currentSong=this.PRIVATE.playlist[0]):this.UTIL.throwError({type:"type",message:"Playlist must be an array!"})}play(){let{currentSong:a}=this.PRIVATE;return a?a.audio.play():null}stop(){this.PRIVATE.currentSong.audio.stop()}pause(){this.PRIVATE.currentSong.audio.pause()}});